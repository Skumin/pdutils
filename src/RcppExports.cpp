// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// mutate_deleq
NumericMatrix mutate_deleq(NumericMatrix mat, NumericMatrix boxbounds, double fParam);
RcppExport SEXP _pdutils_mutate_deleq(SEXP matSEXP, SEXP boxboundsSEXP, SEXP fParamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type boxbounds(boxboundsSEXP);
    Rcpp::traits::input_parameter< double >::type fParam(fParamSEXP);
    rcpp_result_gen = Rcpp::wrap(mutate_deleq(mat, boxbounds, fParam));
    return rcpp_result_gen;
END_RCPP
}
// project_population
NumericMatrix project_population(NumericMatrix mat, NumericMatrix Emat, NumericMatrix constr);
RcppExport SEXP _pdutils_project_population(SEXP matSEXP, SEXP EmatSEXP, SEXP constrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Emat(EmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type constr(constrSEXP);
    rcpp_result_gen = Rcpp::wrap(project_population(mat, Emat, constr));
    return rcpp_result_gen;
END_RCPP
}
// gen_init_pop
NumericMatrix gen_init_pop(int NP, NumericMatrix boxbounds, NumericMatrix Emat, NumericMatrix constr);
RcppExport SEXP _pdutils_gen_init_pop(SEXP NPSEXP, SEXP boxboundsSEXP, SEXP EmatSEXP, SEXP constrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type boxbounds(boxboundsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Emat(EmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type constr(constrSEXP);
    rcpp_result_gen = Rcpp::wrap(gen_init_pop(NP, boxbounds, Emat, constr));
    return rcpp_result_gen;
END_RCPP
}
// gen_init_pop_x0
NumericMatrix gen_init_pop_x0(int NP, NumericMatrix boxbounds, NumericMatrix Emat, NumericMatrix constr, NumericMatrix x0);
RcppExport SEXP _pdutils_gen_init_pop_x0(SEXP NPSEXP, SEXP boxboundsSEXP, SEXP EmatSEXP, SEXP constrSEXP, SEXP x0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type NP(NPSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type boxbounds(boxboundsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Emat(EmatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type constr(constrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x0(x0SEXP);
    rcpp_result_gen = Rcpp::wrap(gen_init_pop_x0(NP, boxbounds, Emat, constr, x0));
    return rcpp_result_gen;
END_RCPP
}
// pt_multi_pd
double pt_multi_pd(int nums, int defs, double rho, double tau, int pers, double ci, int simulations);
RcppExport SEXP _pdutils_pt_multi_pd(SEXP numsSEXP, SEXP defsSEXP, SEXP rhoSEXP, SEXP tauSEXP, SEXP persSEXP, SEXP ciSEXP, SEXP simulationsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nums(numsSEXP);
    Rcpp::traits::input_parameter< int >::type defs(defsSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type pers(persSEXP);
    Rcpp::traits::input_parameter< double >::type ci(ciSEXP);
    Rcpp::traits::input_parameter< int >::type simulations(simulationsSEXP);
    rcpp_result_gen = Rcpp::wrap(pt_multi_pd(nums, defs, rho, tau, pers, ci, simulations));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pdutils_mutate_deleq", (DL_FUNC) &_pdutils_mutate_deleq, 3},
    {"_pdutils_project_population", (DL_FUNC) &_pdutils_project_population, 3},
    {"_pdutils_gen_init_pop", (DL_FUNC) &_pdutils_gen_init_pop, 4},
    {"_pdutils_gen_init_pop_x0", (DL_FUNC) &_pdutils_gen_init_pop_x0, 5},
    {"_pdutils_pt_multi_pd", (DL_FUNC) &_pdutils_pt_multi_pd, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_pdutils(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
